{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nando\\\\StateReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport React, { useState } from 'react';\nexport default function Timer({\n  display,\n  focusTime,\n  countUp,\n  breakTime\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, countUp < focusTime ? /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 34\n    }\n  }, display ? `Focusing for ${focusTime}` : \"\") : /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, display ? `On Break for ${breakTime}` : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, display ? `${focusTime - countUp}` : \"\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, !display ? \"\" : \"Paused\"))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, display ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": `${focusTime}`,\n    \"aria-valuenow\": `${countUp}` // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percent}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })))) : \"\"));\n}","map":{"version":3,"sources":["C:/Users/nando/StateReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","useState","Timer","display","focusTime","countUp","breakTime","height","width","percent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,OAAD;AAAUC,EAAAA,SAAV;AAAoBC,EAAAA,OAApB;AAA4BC,EAAAA;AAA5B,CAAf,EAAsD;AAKjE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,OAAO,GAAGD,SAAV,gBAAoB;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,OAAO,GAAI,gBAAeC,SAAU,EAA7B,GAA+B,EAAvE,CAApB,gBACD;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,OAAO,GAAI,gBAAeG,SAAU,EAA7B,GAA+B,EAAvE,CAHF,eAKE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,GAAI,GAAGC,SAAS,GAACC,OAAS,EAA1B,GAA4B,EADtC,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAAEF,OAAF,GAAa,EAAb,GAAkB,QAAvB,CARF,CADF,CAFA,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,OAAO,gBAAG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACT;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAgB,GAAEH,SAAU,EAJ9B;AAKE,qBAAiB,GAAEC,OAAQ,EAL7B,CAKgC;AALhC;AAME,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAG,GAAEC,OAAQ;AAApB,KANT,CAMmC;AANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADS,CAAH,GAaD,EAdP,CAdA,CADJ;AAkCH","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Timer({display, focusTime,countUp,breakTime}){\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n            {countUp < focusTime?<h2 data-testid=\"session-title\">{display ? `Focusing for ${focusTime}`:\"\"}</h2>:\r\n            <h2 data-testid=\"session-title\">{display ? `On Break for ${breakTime}`:\"\"}</h2>}\r\n            {/* TODO: Update message below to include time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {display ? `${(focusTime-countUp)}`:\"\"}\r\n            </p>\r\n            <h2>{!(display) ? \"\" : \"Paused\" }</h2>\r\n          </div>\r\n        </div>\r\n        <section >\r\n        {display ? <div className=\"row mb-2\" >\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax={`${focusTime}`}\r\n                aria-valuenow= {`${countUp}`} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${percent}%` }} // TODO: Increase width % as elapsed time increases\r\n              />   \r\n            </div>\r\n          </div>\r\n        </div>:\"\"}\r\n        \r\n        </section>\r\n      </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}