{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nando\\\\StateReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Break from \"./Break\";\nimport Focus from \"./Focus.js\";\nimport PlayStop from \"./PlayStop\";\nimport Timer from \"./Timer.js\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(5);\n  const [focusTime, setFocusTime] = useState(25);\n  const [countUp, setCountUp] = useState(0);\n  const [countDown, setCountDown] = useState(0);\n  const [display, setDisplay] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (countUp < focusTime) {\n      setCountUp(countUp => countUp + 1);\n\n      if (countUp == focusTime - 1) {\n        new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      }\n    }\n\n    if (countUp >= focusTime) {\n      setCountDown(countDown => countDown + 1);\n    }\n  }, isTimerRunning ? 1000 : null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    focusTime: focusTime,\n    setFocusTime: setFocusTime,\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Break, {\n    breakTime: breakTime,\n    setBreakTime: setBreakTime,\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlayStop, {\n    breakTime: breakTime,\n    setBreakTime: setBreakTime,\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    focusTime: focusTime,\n    setFocusTime: setFocusTime,\n    countUp: countUp,\n    setCountUp: setCountUp,\n    display: display,\n    setDisplay: setDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Timer, {\n    focusTime: focusTime,\n    setFocusTime: setFocusTime,\n    breakTime: breakTime,\n    setBreakTime: setBreakTime,\n    isTimerRunning: isTimerRunning,\n    setIsTimerRunning: setIsTimerRunning,\n    countUp: countUp,\n    setCountUp: setCountUp,\n    countDown: countDown,\n    setCountDown: setCountDown,\n    display: display,\n    setDisplay: setDisplay,\n    percent: countUp / focusTime * 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/nando/StateReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Break","Focus","PlayStop","Timer","Pomodoro","isTimerRunning","setIsTimerRunning","breakTime","setBreakTime","focusTime","setFocusTime","countUp","setCountUp","countDown","setCountDown","display","setDisplay","Audio","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAWC,YAAX,IAA2BjB,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACkB,OAAD,EAASC,UAAT,IAAuBnB,QAAQ,CAAC,KAAD,CAArC;AAKAE,EAAAA,WAAW,CACT,MAAM;AACJ;AACA,QAAIY,OAAO,GAAGF,SAAd,EAAyB;AACvBG,MAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAV;;AACA,UAAGA,OAAO,IAAKF,SAAS,GAAG,CAA3B,EAA8B;AAC5B,YAAIQ,KAAJ,CAAW,8CAAX,EAA0DC,IAA1D;AACD;AACF;;AACD,QAAGP,OAAO,IAAIF,SAAd,EAAwB;AACtBK,MAAAA,YAAY,CAAED,SAAD,IAAcA,SAAS,GAAG,CAA3B,CAAZ;AACD;AACF,GAZQ,EAaTR,cAAc,GAAG,IAAH,GAAU,IAbf,CAAX;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEI,SADb;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,cAAc,EAAEL,cAHlB;AAIE,IAAA,iBAAiB,EAAEC,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEC,SADb;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,cAAc,EAAEH,cAHlB;AAIE,IAAA,iBAAiB,EAAEC,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CATF,CADF,eAqBE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AACM,IAAA,SAAS,EAAEC,SADjB;AAEM,IAAA,YAAY,EAAEC,YAFpB;AAGM,IAAA,cAAc,EAAEH,cAHtB;AAIM,IAAA,iBAAiB,EAAEC,iBAJzB;AAKM,IAAA,SAAS,EAAEG,SALjB;AAMM,IAAA,YAAY,EAAEC,YANpB;AAOM,IAAA,OAAO,EAAEC,OAPf;AAQM,IAAA,UAAU,EAAEC,UARlB;AASM,IAAA,OAAO,EAAEG,OATf;AAUM,IAAA,UAAU,EAAEC,UAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CArBF,eAqCE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEP,SADb;AAEE,IAAA,YAAY,EAAEC,YAFhB;AAGE,IAAA,SAAS,EAAEH,SAHb;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,cAAc,EAAEH,cALlB;AAME,IAAA,iBAAiB,EAAEC,iBANrB;AAOE,IAAA,OAAO,EAAEK,OAPX;AAQE,IAAA,UAAU,EAAEC,UARd;AASE,IAAA,SAAS,EAAEC,SATb;AAUE,IAAA,YAAY,EAAEC,YAVhB;AAWE,IAAA,OAAO,EAAEC,OAXX;AAYE,IAAA,UAAU,EAAEC,UAZd;AAaE,IAAA,OAAO,EAAGL,OAAO,GAACF,SAAT,GAAoB,GAb/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CADF;AAyDD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Break from \"./Break\";\nimport Focus from \"./Focus.js\";\nimport PlayStop from \"./PlayStop\";\nimport Timer from \"./Timer.js\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(5);\n  const [focusTime, setFocusTime] = useState(25);\n  const [countUp, setCountUp] = useState(0);\n  const [countDown,setCountDown] = useState(0);\n  const [display,setDisplay] = useState(false)\n \n\n\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (countUp < focusTime) {\n        setCountUp((countUp) => countUp + 1);\n        if(countUp == (focusTime - 1)){\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        }\n      }\n      if(countUp >= focusTime){\n        setCountDown((countDown)=> countDown + 1)\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <Focus\n            focusTime={focusTime}\n            setFocusTime={setFocusTime}\n            isTimerRunning={isTimerRunning}\n            setIsTimerRunning={setIsTimerRunning}\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <Break\n              breakTime={breakTime}\n              setBreakTime={setBreakTime}\n              isTimerRunning={isTimerRunning}\n              setIsTimerRunning={setIsTimerRunning}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n        <PlayStop\n              breakTime={breakTime}\n              setBreakTime={setBreakTime}\n              isTimerRunning={isTimerRunning}\n              setIsTimerRunning={setIsTimerRunning}\n              focusTime={focusTime}\n              setFocusTime={setFocusTime}\n              countUp={countUp}\n              setCountUp={setCountUp}\n              display={display}\n              setDisplay={setDisplay}\n            />\n        </div>\n      </div>\n      <Timer\n        focusTime={focusTime}\n        setFocusTime={setFocusTime}\n        breakTime={breakTime}\n        setBreakTime={setBreakTime}\n        isTimerRunning={isTimerRunning}\n        setIsTimerRunning={setIsTimerRunning}\n        countUp={countUp}\n        setCountUp={setCountUp}\n        countDown={countDown}\n        setCountDown={setCountDown}\n        display={display}\n        setDisplay={setDisplay}\n        percent={(countUp/focusTime)*100}\n      />\n      \n    \n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}