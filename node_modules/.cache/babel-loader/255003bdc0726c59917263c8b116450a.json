{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nando\\\\StateReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Focus.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nexport default function Focus({\n  focusTime,\n  setFocusTime,\n  isTimerRunning,\n  setIsTimerRunning\n}) {\n  function minutesToDuration(givenMinutes) {\n    const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n    return `${minutes}:00`;\n  }\n\n  const handleClick = value => {\n    if (value != \"-\") {\n      setFocusTime(focusTime => focusTime - 5);\n\n      if (focusTime <= 5) {\n        setFocusTime(5);\n      }\n    } else {\n      setFocusTime(focusTime => focusTime + 5);\n\n      if (focusTime >= 60) {\n        setFocusTime(60);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, isTimerRunning ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => handleClick(\"+\"),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => handleClick(\"+\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: () => handleClick(\"-\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/nando/StateReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Focus.js"],"names":["React","useState","useInterval","Focus","focusTime","setFocusTime","isTimerRunning","setIsTimerRunning","minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","handleClick","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAGA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,SAAD;AAAWC,EAAAA,YAAX;AAAwBC,EAAAA,cAAxB;AAAuCC,EAAAA;AAAvC,CAAf,EAAyE;AAIpF,WAASC,iBAAT,CAA2BC,YAA3B,EAAyC;AACrC,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAX,EAAyBI,QAAzB,GAAoCC,QAApC,CAA6C,CAA7C,EAAgD,GAAhD,CAAhB;AACA,WAAQ,GAAEJ,OAAQ,KAAlB;AACD;;AAEH,QAAMK,WAAW,GAAEC,KAAD,IAAS;AACvB,QAAGA,KAAK,IAAI,GAAZ,EAAgB;AAChBX,MAAAA,YAAY,CAACD,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAZ;;AACI,UAAGA,SAAS,IAAI,CAAhB,EAAkB;AACdC,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACH;AACJ,KALD,MAKO;AACHA,MAAAA,YAAY,CAACD,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAZ;;AACI,UAAGA,SAAS,IAAI,EAAhB,EAAoB;AAChBC,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACR;AAEJ,GAbD;;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBG,iBAAiB,CAACJ,SAAD,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKE,cAAc,gBACb;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAE,MAAMS,WAAW,CAAC,GAAD,CAJ5B;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADa,gBAWb;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,GAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAbN,eAwBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,GAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAxBF,CALF,CADF,CADF;AA2CH","sourcesContent":["import React, {useState} from \"react\"\r\nimport useInterval from \"../utils/useInterval\";\r\n\r\n\r\nexport default function Focus({focusTime,setFocusTime,isTimerRunning,setIsTimerRunning}){\r\n\r\n   \r\n\r\n    function minutesToDuration(givenMinutes) {\r\n        const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\r\n        return `${minutes}:00`;\r\n      }\r\n\r\n    const handleClick=(value)=>{\r\n        if(value != \"-\"){\r\n        setFocusTime(focusTime => focusTime - 5) \r\n            if(focusTime <= 5){\r\n                setFocusTime(5)\r\n            }\r\n        } else {\r\n            setFocusTime(focusTime => focusTime + 5) \r\n                if(focusTime >= 60 ){\r\n                    setFocusTime(60)\r\n                } \r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n      <fieldset>\r\n        <div className=\"input-group input-group-lg mb-2\">\r\n          <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n            {/* TODO: Update this text to display the current focus session duration */}\r\n            Focus Duration: {minutesToDuration(focusTime)}\r\n          </span>\r\n          <div className=\"input-group-append\">\r\n            {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\r\n              {isTimerRunning ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-focus\"\r\n                  onClick={() => handleClick(\"+\")}\r\n                  disabled\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-testid=\"decrease-focus\"\r\n                  onClick={() => handleClick(\"+\")}\r\n                >\r\n                  <span className=\"oi oi-minus\" />\r\n                </button>\r\n              )}\r\n\r\n            {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-testid=\"increase-focus\"\r\n              onClick={() => handleClick(\"-\")}\r\n            >\r\n              <span className=\"oi oi-plus\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}