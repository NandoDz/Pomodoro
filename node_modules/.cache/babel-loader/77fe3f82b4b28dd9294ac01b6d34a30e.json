{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nando\\\\StateReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport React, { useState } from 'react';\nexport default function Timer({\n  isTimerRunning,\n  setIsTimerRunning,\n  focusTime,\n  setFocusTime,\n  breakTime,\n  setBreakTime,\n  countDown,\n  setCountDown\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, isTimerRunning ? `Focusing for ${focusTime}` : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, isTimerRunning ? countDown : \"\"))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, isTimerRunning ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": countDown // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: countDown\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  })))) : \"\"));\n}","map":{"version":3,"sources":["C:/Users/nando/StateReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","useState","Timer","isTimerRunning","setIsTimerRunning","focusTime","setFocusTime","breakTime","setBreakTime","countDown","setCountDown","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,iBAAjB;AAAoCC,EAAAA,SAApC;AAA8CC,EAAAA,YAA9C;AAA2DC,EAAAA,SAA3D;AAAsEC,EAAAA,YAAtE;AAAmFC,EAAAA,SAAnF;AAA6FC,EAAAA;AAA7F,CAAf,EAA0H;AACrI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,cAAc,GAAI,gBAAeE,SAAU,EAA7B,GAA+B,EAA9E,CAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,cAAc,GAACM,SAAD,GAAW,EAD5B,CAJF,CADF,CAFA,eAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,cAAc,gBAAG;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeF,SALjB,CAK2B;AAL3B;AAME,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAEH;AAAT,KANT,CAM8B;AAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADgB,CAAH,GAaR,EAdP,CAZA,CADJ;AAgCH","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Timer({isTimerRunning, setIsTimerRunning, focusTime,setFocusTime,breakTime, setBreakTime,countDown,setCountDown}){\r\n    return (\r\n        <div>\r\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n            <h2 data-testid=\"session-title\">{isTimerRunning ? `Focusing for ${focusTime}`:\"\"}</h2>\r\n            {/* TODO: Update message below to include time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {isTimerRunning?countDown:\"\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <section >\r\n        {isTimerRunning ? <div className=\"row mb-2\" >\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={countDown}// TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: countDown}} // TODO: Increase width % as elapsed time increases\r\n              />   \r\n            </div>\r\n          </div>\r\n        </div>:\"\"}\r\n        \r\n        </section>\r\n      </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}