{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nando\\\\StateReact\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport React, { useState } from 'react';\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function Timer({\n  display,\n  focusTime,\n  countUp,\n  breakTime,\n  countDown\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, countUp < focusTime ? /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, display ? `Focusing for ${focusTime}` : \"\") : /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, display ? `On Break for ${breakTime}` : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, display ? `${focusTime - countUp}` : \"\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, !display ? \"\" : \"Paused\"))), countUp < focusTime ? /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, display ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": `${focusTime}`,\n    \"aria-valuenow\": `${countUp}` // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${countUp / focusTime * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })))) : \"\") : /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, display ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": `${breakTime}`,\n    \"aria-valuenow\": `${countDown}` // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${countDown / breakTime * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })))) : \"\"));\n}","map":{"version":3,"sources":["C:/Users/nando/StateReact/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","useState","minutesToDuration","secondsToDuration","Timer","display","focusTime","countUp","breakTime","countDown","height","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {minutesToDuration,secondsToDuration} from \"../utils/duration\"\r\n\r\n\r\nexport default function Timer({display, focusTime,countUp,breakTime,countDown}){\r\n\r\n\r\n    \r\n    \r\n    return (\r\n      <div>\r\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n            {countUp < focusTime ? (\r\n              <h2 data-testid=\"session-title\">\r\n                {display ? `Focusing for ${focusTime}` : \"\"}\r\n              </h2>\r\n            ) : (\r\n              <h2 data-testid=\"session-title\">\r\n                {display ? `On Break for ${breakTime}` : \"\"}\r\n              </h2>\r\n            )}\r\n            {/* TODO: Update message below to include time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {display ? `${focusTime - countUp}` : \"\"}\r\n            </p>\r\n            <h2>{!display ? \"\" : \"Paused\"}</h2>\r\n          </div>\r\n        </div>\r\n        {countUp < focusTime ? (\r\n          <section>\r\n            {display ? (\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                  <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                    <div\r\n                      className=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax={`${focusTime}`}\r\n                      aria-valuenow={`${countUp}`} // TODO: Increase aria-valuenow as elapsed time increases\r\n                      style={{ width: `${(countUp / focusTime) * 100}%` }} // TODO: Increase width % as elapsed time increases\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </section>\r\n        ) : (\r\n          <section>\r\n            {display ? (\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                  <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                    <div\r\n                      className=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax={`${breakTime}`}\r\n                      aria-valuenow={`${countDown}`} // TODO: Increase aria-valuenow as elapsed time increases\r\n                      style={{ width: `${(countDown / breakTime) * 100}%` }} // TODO: Increase width % as elapsed time increases\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </section>\r\n        )}\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}